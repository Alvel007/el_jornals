# Generated by Django 4.2.7 on 2023-11-07 19:32

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=64, unique=True, verbose_name='Логин')),
                ('first_name', models.CharField(max_length=64, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=64, verbose_name='Фамилия')),
                ('middle_name', models.CharField(max_length=64, verbose_name='Отчество')),
                ('birth_date', models.DateField(default='2000-01-01', verbose_name='Дата рождения')),
                ('position', models.CharField(choices=[('ЭОП', 'Электромонтер по обслуживанию'), ('ДИ', 'Дежурный инженер'), ('ДИ 2 кат.', 'Дежурный инженер 2 кат.'), ('ДИ 1 кат.', 'Дежурный инженер 1 кат.'), ('Диспетчер ЦУС', 'Диспетчер ЦУС'), ('ВИ', 'Ведущий инженер гр. ПС'), ('ВИОР', 'Ведущий инженер по ОП гр. ПС'), ('Нач. ПС', 'Начальник ПС'), ('Нач. ГПС', 'Начальник гр. ПС'), ('Нач. ООР', 'Начальник ООР'), ('Нач. ЦУС', 'Начальник ЦУС'), ('АТП ПМЭС', 'АТП ПМЭС')], default='', max_length=120, null=True, verbose_name='Должность')),
                ('employee_id', models.CharField(max_length=64, unique=True, verbose_name='Таб. номер')),
                ('electrical_safety_group', models.CharField(blank=True, choices=[('III', 'III'), ('IV', 'IV'), ('V', 'V')], max_length=3, verbose_name='Группа по ЭБ')),
                ('operational_staff', models.CharField(max_length=64)),
                ('administrative_staff', models.CharField(max_length=64)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
